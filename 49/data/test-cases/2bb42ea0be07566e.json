{
  "uid" : "2bb42ea0be07566e",
  "name" : "test_datawritetofile",
  "fullName" : "test_phyton.test_writedatatofile#test_datawritetofile",
  "historyId" : "389353d07b07bd0a275a94a2ed117206",
  "time" : {
    "start" : 1629155505771,
    "stop" : 1629155516063,
    "duration" : 10292
  },
  "status" : "broken",
  "statusMessage" : "TypeError: can only concatenate str (not \"NoneType\") to str",
  "statusTrace" : "def test_datawritetofile():\n        p_main = m.PageMain()\n        p_main.open()\n        time.sleep(2)\n        p_signin = p_main.signinpage_open()\n        time.sleep(2)\n        # tesztadatok\n        testemail = 'testuser1@example.com'\n        testpassw = 'Abcd123$'\n        testuser = 'testuser1'\n        # megadott teszt userrel belépés\n        p_signin.fill_inputs(testemail, testpassw)\n        p_signin.click_signin()\n        time.sleep(2)\n>       p_main.articles_write_to_file('output.csv')\n\ntest_phyton/test_writedatatofile.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_phyton/pages/page_main.py:231: in articles_write_to_file\n    writer.writerow(article.csvrow())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.class_article.Article object at 0x7f1cce0ec0d0>\n\n    def csvrow(self):\n>       return self.title+';'+self.shorttext+';'+self.text\nE       TypeError: can only concatenate str (not \"NoneType\") to str\n\ntest_phyton/pages/class_article.py:38: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: can only concatenate str (not \"NoneType\") to str",
    "statusTrace" : "def test_datawritetofile():\n        p_main = m.PageMain()\n        p_main.open()\n        time.sleep(2)\n        p_signin = p_main.signinpage_open()\n        time.sleep(2)\n        # tesztadatok\n        testemail = 'testuser1@example.com'\n        testpassw = 'Abcd123$'\n        testuser = 'testuser1'\n        # megadott teszt userrel belépés\n        p_signin.fill_inputs(testemail, testpassw)\n        p_signin.click_signin()\n        time.sleep(2)\n>       p_main.articles_write_to_file('output.csv')\n\ntest_phyton/test_writedatatofile.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_phyton/pages/page_main.py:231: in articles_write_to_file\n    writer.writerow(article.csvrow())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.class_article.Article object at 0x7f1cce0ec0d0>\n\n    def csvrow(self):\n>       return self.title+';'+self.shorttext+';'+self.text\nE       TypeError: can only concatenate str (not \"NoneType\") to str\n\ntest_phyton/pages/class_article.py:38: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b065bc19c9317247",
      "name" : "log",
      "source" : "b065bc19c9317247.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "7db82602cfd58c2e",
      "name" : "stdout",
      "source" : "7db82602cfd58c2e.txt",
      "type" : "text/plain",
      "size" : 56
    }, {
      "uid" : "72c8192b8dbd3370",
      "name" : "stderr",
      "source" : "72c8192b8dbd3370.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_phyton"
  }, {
    "name" : "suite",
    "value" : "test_writedatatofile"
  }, {
    "name" : "host",
    "value" : "fv-az74-944"
  }, {
    "name" : "thread",
    "value" : "3862-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_phyton.test_writedatatofile"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "2bb42ea0be07566e.json",
  "parameterValues" : [ ]
}